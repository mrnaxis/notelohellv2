
@{
    ViewBag.Title = "StatsUser";
}

<h2>StatsUser</h2>

<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<div id="loadingData" class="ld-dt hidden"><span class="fa fa-spinner fa-pulse fa-5x fa-fw text-center" style="color:black;" aria-hidden="true"></span></div>
<div id="panelDataGame" class="divlazuli hidden">
    <div class="centro-2">
        <div class="container-fluid">
            <div class="row">
                <br />
                <div class="col-md-1 col-lg-1" style="padding-right: 10em;">
                    <div id="avatar-player" class="img-responsive"></div>
                    <h4 class="tag-player"></h4>
                </div>
                <div class="col-md-10 col-lg-10">
                    <h2 class="name-player"></h2>
                </div>
            </div>
            <div class="row">
                <ul class="nav nav-tabs" role="tablist">
                    <li role="presentation" class="active"><a href="#quick" aria-controls="quick" role="tab" data-toggle="tab">Quickplay</a></li>
                    <li role="presentation"><a href="#comp" aria-controls="comp" role="tab" data-toggle="tab">Competitivo</a></li>
                </ul>
                <div class="tab-content">
                    <div id="quick" class="tab-pane active" role="tabpanel">
                        <h3>Status Gerais</h3>
                        <div class="col-md-6">
                            <ul id="stats-ovl-quick" class="list-group"></ul>
                        </div>
                        <div class="col-md-6">
                            <div id="chart-time-quick" class="hidden"></div>
                        </div>
                        <br />
                        <br />
                        <div class="col-md-12">
                            <div class="col-md-6 panel-heroes">
                                <div id="heroes-list-quick" class="">
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div id="heroes-info-quick" class="">
                                </div>
                            </div>
                        </div>
                        <br />
                        <br />
                        <div class="col-md-6">
                            <div id="chart-damage-quick"></div>
                        </div>
                        <div class="col-md-6">
                            <div id="chart-kills-quick"></div>
                        </div>
                    </div>
                    <div id="comp" class="tab-pane" role="tabpanel">
                        <h3>Status Gerais</h3>
                        <div class="col-md-6">
                            <ul id="stats-ovl-comp" class="list-group"></ul>
                        </div>
                        <div class="col-md-6">
                            <div id="chart-time-comp" class="hidden"></div>
                        </div>
                        <br />
                        <br />
                        <div class="col-md-12">
                            <div class="col-md-6 panel-heroes">
                                <div id="heroes-list-comp" class="">
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div id="heroes-info-comp">
                                </div>
                            </div>
                        </div>
                        <br />
                        <br />
                        <div class="col-md-6">
                            <div id="chart-damage-comp"></div>
                        </div>
                        <div class="col-md-6">
                            <div id="chart-kills-comp"></div>
                        </div>
                    </div>
                </div>
                <br />
            </div>
        </div>
    </div>
</div>


<script>
    function EnviarDados() {
        var gameTag = document.getElementById("gameTag");

        if (!$("#panelDataGame").hasClass("hidden"))
            $("#panelDataGame").addClass("hidden");

        if ($("#loadingData").hasClass("hidden"))
            $("#loadingData").removeClass("hidden");

        if (gameTag !== null && gameTag !== 'undefined' && gameTag !== undefined) {

            $("#send").attr("disabled", "disabled");

            if (gameTag.value === "") {
                alert("digite seu battleTag");
                return;
            }

            $.ajax({
                type: "POST",
                url: "@Url.Action("Teste", "Home")",
                data: JSON.stringify({ tag: gameTag.value }),
                contentType: "application/json;",
                dataType: "json",
                success: function (data) {
                    $("#send").removeAttr("disabled");
                    $("#loadingData").addClass("hidden");
                    $("#panelDataGame").removeClass("hidden");
                    if (data !== null) {
                        var an = JSON.parse(data);
                        google.charts.load('current', { packages: ['corechart'] });
                        google.charts.setOnLoadCallback(function () { TimeGraphs(); GraphsGeneral();});
                    }

                    GetAvgStatus(an, 'comp');
                    GetAvgStatus(an, 'quick');
                    GetHeroesNStats(an, 'quick');
                    GetHeroesNStats(an, 'comp');

                    function TimeGraphs() {
                        ConstructTheTimeGraphs(an, 'comp');
                        ConstructTheTimeGraphs(an, 'quick');
                    }

                    function GraphsGeneral() {
                        ConstructTheGeneralStatsGraphs(an, 'quick', 'chart-damage-quick', 'Damage', 'all_damage_done');
                        ConstructTheGeneralStatsGraphs(an, 'comp', 'chart-damage-comp', 'Damage', 'all_damage_done');
                        ConstructTheGeneralStatsGraphs(an, 'quick', 'chart-kills-quick', 'Kills', 'eliminations');
                        ConstructTheGeneralStatsGraphs(an, 'comp', 'chart-kills-comp', 'Kills', 'eliminations');
                    }
                },
                error: function () {
                    alert("Deu Ruim! Tente Novamente!");
                    $("#send").removeAttr("disabled");
                    $("#loadingData").addClass("hsidden");
                }
            });

        }
    }
    $(document).ready(function () {
        $("#send").click(EnviarDados);
    });

    function CKST(fieldToBeChecked) {
        if (typeof fieldToBeChecked === 'undefined' || typeof fieldToBeChecked === 'null')
            return "0";
        return fieldToBeChecked;
    }

    function GetAvgStatus(d, typeCons) {
        //pega o status básicos do jogador, sendo eles apenas dados individuais.
        if ((typeof d !== 'string' || typeof d !== 'object') && typeof typeCons !== 'string')
            return null;

        var lin = d.us.stats;
        if (typeof lin !== 'undefined') {

            var reqName = d._request.route;
            $(".tag-player").html("<i>" + reqName.split('/')[4].replace('-','#')+"</i>");
            $(".name-player").html("" + reqName.split('/')[4].split('-')[0]);

            if (typeCons === 'comp') {
                var lincompov = lin.competitive.overall_stats;
                var lincompgs = lin.competitive.game_stats;
                $("#avatar-player").html("<img class='img-rounded' src='" + lincompov['avatar'] + "' alt='PlayerChar'/>");
                $("#stats-ovl-" + typeCons).append("<li class='list-group-item'><span class='txt-black'>Vitórias: " +
                    CKST(lincompov['wins'])
                    + "</span></li>");
                $("#stats-ovl-" + typeCons).append("<li class='list-group-item'><span class='txt-black'>Total Medalhas: " +
                    CKST(lincompgs['medals'])
                    + "</span></li>");
                $("#stats-ovl-" + typeCons).append("<li class='list-group-item'><span class='txt-black'>Total de Horas de Jogo: " +
                    CKST(lincompgs['time_played'])
                    + "</span></li>");
            }
            else if (typeCons === 'quick')
            {
                var linquickov = lin.quickplay.overall_stats;
                var linquickgs = lin.quickplay.game_stats;
                $("#avatar-player").html("<img class='img-rounded' src='" + linquickov['avatar'] + "' alt='PlayerChar'/>");
                $("#stats-ovl-" + typeCons).append("<li class='list-group-item'><span class='txt-black'>Vitórias: " +
                    CKST(linquickov['wins'])
                    + "</span></li>");
                $("#stats-ovl-" + typeCons).append("<li class='list-group-item'><span class='txt-black'>Total Medalhas(g/s/b): " +
                    CKST(linquickgs['medals'])
                    + "</span></li>");
                $("#stats-ovl-" + typeCons).append("<li class='list-group-item'><span class='txt-black'>KPD: " +
                    CKST(linquickgs['kpd'])
                    + "</span></li>");
                $("#stats-ovl-" + typeCons).append("<li class='list-group-item'><span class='txt-black'>Total de Horas de Jogo: " +
                    CKST(linquickgs['time_played'])
                    + "</span></li>");
            }
        }
    }

    function ChangePanel(idName, dadElement) {
        if (typeof idName !== "string" || typeof dadElement !== "string")
            return null;

        var c = $("#" + dadElement).children();
        c.addClass("hidden");
        var nextChanged = c.closest("."+idName);
        nextChanged.removeClass("hidden");
    }

    function GetHeroesNStats(d, typeCons) {
        if ((typeof d !== 'string' || typeof d !== 'object') && typeof typeCons !== 'string')
            return null;

        var linheroes = d.us.heroes;
        var linquick = typeCons === "quick" ? linheroes.stats.quickplay : linheroes.stats.competitive;

        for (var i in linquick) {
            if (linquick.hasOwnProperty(i)) {
                var fns = "ChangePanel('" + i.trim() + "-" + typeCons + "', 'heroes-info-" + typeCons + "'); event.preventDefault();";
                $("#heroes-list-" + typeCons).append("<div class='col-md-1 heroes-item'><span class='txt-black'><a id='" + i + "-" + typeCons
                    + "' href='#' onclick=\""+fns+"\"> " + i + "</a></span></div>");
                //$("#" + i).on("click", function () { ChangePanel(i, "heroes-info-" + typeCons) });
            }
        }

        for (var i in linquick) {
            if (linquick.hasOwnProperty(i)) {
                $("#heroes-info-" + typeCons).append("<ul class='list-group " + i + '-' + typeCons + " hidden'></ul>");
                $("." + i + '-' + typeCons).append("<li class='list-group-item'><span class='txt-black'>Total de Dano Causado: " + CKST(linquick[i].general_stats.all_damage_done) + "</span></li>");
                $("." + i + '-' + typeCons).append("<li class='list-group-item'><span class='txt-black'>Eliminações : " + CKST(linquick[i].general_stats.eliminations) + "</span></li>");
                $("." + i + '-' + typeCons).append("<li class='list-group-item'><span class='txt-black'>Eliminações Solo: " + CKST(linquick[i].general_stats.solo_kills) + "</span></li>");
                $("." + i + '-' + typeCons).append("<li class='list-group-item'><span class='txt-black'>Mortes : " + CKST(linquick[i].general_stats.deaths) + "</span></li>");
                $("." + i + '-' + typeCons).append("<li class='list-group-item'><span class='txt-black'>Total Medalhas(g/s/b) : " + CKST(linquick[i].general_stats.medals) + "</span></li>");
            }
        }
    }

    function ConstructTheGeneralStatsGraphs(d, typeCons, gpLocalId, field, idfield) {
        if ((typeof d !== 'string' || typeof d !== 'object') && typeof typeCons !== 'string') {
            return null;
        }

        if (typeof gpLocalId !== 'string')
            gpLocalId = 'chart-time-' + typeCons;

        var dt = [['Heroes',field]];
        var lin;

        if (typeCons === 'quick')
            lin = d.us.heroes.stats.quickplay;
        else
            lin = d.us.heroes.stats.competitive;

        if (typeof lin !== 'undefined') {
            for (var i in lin) {
                if (lin.hasOwnProperty(i)) {
                    var h = lin[i];
                    //if (Number(h.general_stats[idfield]) > 0)
                        dt.push([i, h.general_stats[idfield]]);
                }
            }

            var data = new google.visualization.arrayToDataTable(dt);

            // Set chart options
            var options = {
                'title': field,
                'width': 500,
                'height': 500
            };

            // Instantiate and draw our chart, passing in some options.
            var chart = new google.visualization.BarChart(document.getElementById(gpLocalId));
            chart.draw(data, options);

            $("#" + gpLocalId).removeClass("hidden");
        }

    }

    function ConstructTheTimeGraphs(d, typeCons, gpLocalId) {
        //copiei na cara dura msm, e vou adaptar
        //Create the data table.
        if ((typeof d !== 'string' || typeof d !== 'object')
            && typeof typeCons !== 'string') {
            return null;
        }

        if (typeof gpLocalId !== 'string')
            gpLocalId = 'chart-time-' + typeCons;

        var dt = [['Heroes', 'Time']];
        var lin;

        if (typeCons === 'quick')
            lin = d.us.heroes.playtime.quickplay;
        else
            lin = d.us.heroes.playtime.competitive;

        if (typeof lin !== 'undefined') {
            for (var i in lin) {
                if (lin.hasOwnProperty(i)) {
                    if (Number(lin[i]) > 0)
                        dt.push([i, lin[i]]);
                }
            }

            var data = new google.visualization.arrayToDataTable(dt);

            // Set chart options
            var options = {
                'title': 'How Much Time Did I Waste?',
                'width': 500,
                'height': 450
            };

            // Instantiate and draw our chart, passing in some options.
            var chart = new google.visualization.BarChart(document.getElementById(gpLocalId));
            chart.draw(data, options);

            $("#" + gpLocalId).removeClass("hidden");
        }
    }
</script>