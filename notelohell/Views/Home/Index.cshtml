@{
    ViewBag.Title = "Home Page";
}

<style>
    body{
        overflow-x:hidden;
        color: #f4fff7;
        height: 100%;
    }
    .centro {
        margin: auto;
        position: center;
        width: 50%;
        max-width: 750px;
        /*padding-left: 60px;*/
    }
    .centro-2 {
        margin: auto;
        position: center;
        width: 75%;
        max-width: 750px;
    } 
    .botaotine {
        background-color: #292f36;
        border: none;
        padding: 10px 15px 10px 15px;
        color: #eaeaea;
        transition: background-color 1s;
        text-decoration: none;
        text-align: center;
        display: inline-block;
    }
    .botaotine:hover{
        background-color: #001E35;
    }
    .divlazuli{
        background-color: #052F5F;
    }
    .textin{
        border: 1px solid #292f36;
        border-radius:0;
        background-color: #f7fff7;
        padding-left: 10px;
        height: 35px;
        width: 70%;
        color: #000000;
    }

    .txt-black{
        color:#000000;
    }
    /*.textin::-webkit-input-placeholder{
        color: #eaeaea;
    }
    .textin::-moz-placeholder{
        color: #eaeaea;
    }*/
    .imgfront {
        /*background-image: url('../../img/OW_Anniversary_023.jpg');*/
        width: 100%;
        min-height:500px;
        padding-top: 200px;
        background-repeat:no-repeat;
        position:center;
        height:auto;
        background-size: cover;
        display:block;
        margin:auto;
        border: none;
    }
    .ld-dt {
        margin: auto;
        width: 5%;
        max-width: 700px;
    }
</style>
<div class="imgfront">
    <div class="container-fluid">
        <div class="row">
            <div class="centro">
                <div class="form-inline form-group">
                    <div class="text-center">
                        <label for="gameTag"></label>
                        <input type="text" id="gameTag" name="gameTag" class="textin" placeholder="BattleTag" />
                        <input type="button" id="send" name="send" class="botaotine" value="Buscar" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<div id="loadingData" class="ld-dt hidden"><span class="fa fa-spinner fa-pulse fa-5x fa-fw text-center" style="color:black;" aria-hidden="true"></span></div>
<div id="panelDataGame" class="divlazuli hidden">
    <div class="container-fluid">
        <div class="row">
            <div class="centro-2">
                <div class="container-fluid">
                    <div class="row">
                        <br />
                        <div class="col-md-3 col-lg-3">
                            <div id="avatar-player" class="img-responsive"></div>
                            <h4 class="tag-player"></h4>
                        </div>
                        <div class="col-md-9 col-lg-9">
                            <h2 class="name-player"></h2>
                        </div>
                    </div>
                    <div class="row">
                        <ul class="nav nav-tabs" role="tablist">
                            <li role="presentation" class="active"><a href="#quick" aria-controls="quick" role="tab" data-toggle="tab">Quickplay</a></li>
                            <li role="presentation"><a href="#comp" aria-controls="comp" role="tab" data-toggle="tab">Competitivo</a></li>
                        </ul>
                        <div class="tab-content">
                            <div id="quick" class="tab-pane active" role="tabpanel">
                                <h3>Status Gerais</h3>
                                <ul id="stats-ovl-quick" class="list-group">
                                </ul>
                                <div id="chart-time-quick" class="centro hidden"></div>
                                <ul id="heroes-list-quick" class="list-group">
                                </ul>
                            </div>
                            <div id="comp" class="tab-pane" role="tabpanel">
                                <h3>Status Gerais</h3>
                                <ul id="stats-ovl-comp" class="list-group">
                                </ul>
                                <div id="chart-time-comp" class="centro hidden"></div>
                                <ul id="heroes-list-comp" class="list-group">
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    function EnviarDados() {
        var gameTag = document.getElementById("gameTag");

        if (!$("#panelDataGame").hasClass("hidden"))
            $("#panelDataGame").addClass("hidden");

        if ($("#loadingData").hasClass("hidden"))
            $("#loadingData").removeClass("hidden");

        if (gameTag !== null && gameTag !== 'undefined' && gameTag !== undefined) {

            $("#send").attr("disabled", "disabled");

            if (gameTag.value === "") {
                alert("digite seu battleTag");
                return;
            }
            
            $.ajax({
                type: "POST",
                url: "@Url.Action("Teste", "Home")",
                data: JSON.stringify({ tag: gameTag.value }),
                contentType: "application/json;",
                dataType: "json",
                success: function (data) {
                    $("#send").removeAttr("disabled");
                    $("#loadingData").addClass("hidden");
                    $("#panelDataGame").removeClass("hidden");
                    if (data !== null) {
                        var an = JSON.parse(data);
                        google.charts.load('current', { packages: ['corechart'] });
                        google.charts.setOnLoadCallback(function () { TimeGraphs(); });
                    }

                    GetAvgStatus(an, 'comp');
                    GetAvgStatus(an, 'quick');
                    GetHeroesNStats(an, 'quick');
                    GetHeroesNStats(an, 'comp');

                    function TimeGraphs() {
                        ConstructTheTimeGraphs(an, 'comp');
                        ConstructTheTimeGraphs(an, 'quick');
                    }
                },
                error: function () {
                    alert("Deu Ruim! Tente Novamente!");
                    $("#send").removeAttr("disabled");
                    $("#loadingData").addClass("hidden");
                }
            });
            
        }
    }
    $(document).ready(function () {
        $("#send").click(EnviarDados);
    });

    function GetAvgStatus(d, typeCons) {
        //pega o status básicos do jogador, sendo eles apenas dados individuais.
        if ((typeof d !== 'string' || typeof d !== 'object') && typeof typeCons !== 'string')
            return null;

        var lin = d.us.stats;
        if (typeof lin !== 'undefined') {

            var reqName = d._request.route;
            $(".tag-player").html("<i>" + reqName.split('/')[4].replace('-','#')+"</i>");
            $(".name-player").html("" + reqName.split('/')[4].split('-')[0]);

            if (typeCons === 'comp') {
                var lincompov = lin.competitive.overall_stats;
                var lincompgs = lin.competitive.game_stats;
                $("#avatar-player").html("<img class='img-rounded' src='" + lincompov['avatar'] + "' alt='PlayerChar'/>");
                $("#stats-ovl-" + typeCons).append("<li class='list-group-item'><span class='txt-black'>Vitórias: " +
                    lincompov['wins']
                    + "</span></li>");
                $("#stats-ovl-" + typeCons).append("<li class='list-group-item'><span class='txt-black'>Total Medalhas: " +
                    lincompgs['medals']
                    + "</span></li>");
                $("#stats-ovl-" + typeCons).append("<li class='list-group-item'><span class='txt-black'>Total de Horas de Jogo: " +
                    lincompgs['time_played']
                    + "</span></li>");
            }
            else if (typeCons === 'quick')
            {
                var linquickov = lin.quickplay.overall_stats;
                var linquickgs = lin.quickplay.game_stats;
                $("#avatar-player").html("<img class='img-rounded' src='" + linquickov['avatar'] + "' alt='PlayerChar'/>");
                $("#stats-ovl-" + typeCons).append("<li class='list-group-item'><span class='txt-black'>Vitórias: " +
                    linquickov['wins']
                    + "</span></li>");
                $("#stats-ovl-" + typeCons).append("<li class='list-group-item'><span class='txt-black'>Total Medalhas(g/s/b): " +
                    linquickgs['medals']
                    + "</span></li>");
                $("#stats-ovl-" + typeCons).append("<li class='list-group-item'><span class='txt-black'>KPD: " +
                    linquickgs['kpd']
                    + "</span></li>");
                $("#stats-ovl-" + typeCons).append("<li class='list-group-item'><span class='txt-black'>Total de Horas de Jogo: " +
                    linquickgs['time_played']
                    + "</span></li>");
            }
        }
    }

    function GetHeroesNStats(d, typeCons) {
        if ((typeof d !== 'string' || typeof d !== 'object') && typeof typeCons !== 'string')
            return null;

        var linheroes = d.us.heroes;
        var linquick = linheroes.stats.quickplay;

        for (var i in linquick) {
            if (linquick.hasOwnProperty(i)) {
                $("#heroes-list-" + typeCons).append("<li class='list-group-item'><span class='txt-black'><a href='#'>" +
                    i
                    +"</a></span></li>")
            }

        }
    }

    function ConstructTheTimeGraphs(d, typeCons, gpLocalId) {
        //copiei na cara dura msm, e vou adaptar
        //Create the data table.
        if ((typeof d !== 'string' || typeof d !== 'object')
            && typeof typeCons !== 'string') {
            return null;
        }

        if (typeof gpLocalId !== 'string')
            gpLocalId = 'chart-time-' + typeCons;
       
        var dt = [['Heroes', 'Time']];
        var lin;

        if (typeCons === 'quick')
            lin = d.us.heroes.playtime.quickplay;
        else
            lin = d.us.heroes.playtime.competitive;

        if (typeof lin !== 'undefined') {
            for (var i in lin) {
                if (lin.hasOwnProperty(i)) {
                    if (Number(lin[i]) > 0)
                        dt.push([i, lin[i]]);
                }
            }

            var data = new google.visualization.arrayToDataTable(dt);

            // Set chart options
            var options = {
                'title': 'How Much Time Did I Waste?',
                'width': 500,
                'height': 450
            };

            // Instantiate and draw our chart, passing in some options.
            var chart = new google.visualization.BarChart(document.getElementById(gpLocalId));
            chart.draw(data, options);

            $("#" + gpLocalId).removeClass("hidden");
        }
    }
</script>